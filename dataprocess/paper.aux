\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\providecommand \oddpage@label [2]{}
\bibstyle{unsrt}
\bibdata{ref}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Condition numbers of all kernels\relax }}{2}{table.caption.2}\protected@file@percent }
\newlabel{cond}{{1}{2}{Condition numbers of all kernels\relax }{table.caption.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Numerical comparison between HIF and HQR. We solve 1D kernel (1) equation by using the approximate inverse $\hat  {G}\hat  {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }}{3}{table.caption.3}\protected@file@percent }
\newlabel{1d-k1}{{2}{3}{Numerical comparison between HIF and HQR. We solve 1D kernel (1) equation by using the approximate inverse $\hat {G}\hat {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }{table.caption.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Numerical comparison between HIF and HQR. We solve 1D kernel (2) equation by using the approximate inverse $\hat  {G}\hat  {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }}{4}{table.caption.4}\protected@file@percent }
\newlabel{1d-k2}{{3}{4}{Numerical comparison between HIF and HQR. We solve 1D kernel (2) equation by using the approximate inverse $\hat {G}\hat {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }{table.caption.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Numerical comparison between HIF and HQR. We solve 1D kernel (3) equation by using the approximate inverse $\hat  {G}\hat  {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }}{5}{table.caption.5}\protected@file@percent }
\newlabel{1d-k3}{{4}{5}{Numerical comparison between HIF and HQR. We solve 1D kernel (3) equation by using the approximate inverse $\hat {G}\hat {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }{table.caption.5}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Numerical comparison between HIF and HQR. We solve 1D kernel (4) equation by using the approximate inverse $\hat  {G}\hat  {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }}{6}{table.caption.6}\protected@file@percent }
\newlabel{1d-k4}{{5}{6}{Numerical comparison between HIF and HQR. We solve 1D kernel (4) equation by using the approximate inverse $\hat {G}\hat {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }{table.caption.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Numerical comparison between HIF and HQR. We solve 1D kernel (5) equation by using the approximate inverse $\hat  {G}\hat  {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }}{7}{table.caption.7}\protected@file@percent }
\newlabel{1d-k5}{{6}{7}{Numerical comparison between HIF and HQR. We solve 1D kernel (5) equation by using the approximate inverse $\hat {G}\hat {K}^{*}$ as preconditioners for PCG with tolerance $1e-14$. We also solve the equation by pure CG without any preconditioners and set the maximum iteration number to be 120.\relax }{table.caption.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The upper left, upper right, lower left, and lower right plot the time scaling of HIF/HQR factorization, peeling algorithm, application of HIF/HQR factorization, and backward application of HIF/HQR factorization, respectively. \relax }}{8}{figure.caption.1}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig}{{1}{8}{The upper left, upper right, lower left, and lower right plot the time scaling of HIF/HQR factorization, peeling algorithm, application of HIF/HQR factorization, and backward application of HIF/HQR factorization, respectively. \relax }{figure.caption.1}{}}
